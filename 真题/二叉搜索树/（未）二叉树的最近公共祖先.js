/***
 * leetcode 236
 * 给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。
 * 
 * 公共祖先的定义为：“对于有根树 T 的两个结点 p、q，最近公共祖先表示为一个结点 x，
 * 满足 x 是 p、q 的祖先且 x 的深度尽可能大（一个节点也可以是它自己的祖先）。”
 * 
 *                    3
 *                  /   \
 *                 5     1
 *                / \    /\
 *               6   2  0  8
 *                  / \
 *                 7   4
 * 
 * 例1：
 * 输入: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1
 * 输出: 3
 * 
 * 例2：
 * 输入: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4
 * 输出: 5
 * 
 * 例3：
 * 输入: root = [1,2], p = 1, q = 2
 * 输出: 1
 * 
 * 提示：
 * 树中节点数目在范围 [2, 105] 内。
 * -109 <= Node.val <= 109
 * 所有 Node.val 互不相同 。
 * p != q
 * p 和 q 均存在于给定的二叉树中。
 * 
 * 解题思路：
 */

var lowestCommonAncestor = function(root, p, q) {
    
};